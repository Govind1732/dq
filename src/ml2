import React, { useState } from 'react';
import axios from 'axios';
import { Container, Row, Col, Form, Button } from 'react-bootstrap';

function MLProfile() {
  const [formData, setFormData] = useState({
    data_source: '',
    project_name: '',
    dbname: '',
    table_name: '',
    incr_col: '',
    incr_cond: '',
    email: ''
  });
  const [loading, setLoading] = useState(false);
  const [accessCheckResult, setAccessCheckResult] = useState('');
  const [additionalFieldsVisible, setAdditionalFieldsVisible] = useState(false);

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData(prevState => ({
      ...prevState,
      [name]: value
    }));
  };

  const handleConnectivityCheck = () => {
    setLoading(true);
    axios.post('http://127.0.0.1:8000/ml_profiler_config_form/ui_fetch/', formData, {
      headers: {
        'Content-Type': 'application/json'
      }
    })
      .then(response => {
        setLoading(false);
        if (response.data.combination_exists) {
          setAccessCheckResult('Connectivity/Access does not exist. Redirecting to marketplace to raise a request');
          window.open('https://marketplace.verizon.com/#/subscriptionReqForm', '_blank');
          setAdditionalFieldsVisible(false);
        } else {
          setAccessCheckResult('Connectivity/Access available. Please fill the remaining fields for profiling');
          setAdditionalFieldsVisible(true);
          fetchAdditionalDetails();
        }
      })
      .catch(error => {
        setLoading(false);
        console.error('Error checking connectivity:', error);
      });
  };

  const fetchAdditionalDetails = () => {
    axios.post('http://127.0.0.1:8000/ml_profiler_config_form/autopopulate_columns/', formData, {
      headers: {
        'Content-Type': 'application/json'
      }
    })
      .then(response => {
        setFormData(prevState => ({
          ...prevState,
          incr_col: response.data.INCR_DT_COL,
          incr_cond: response.data.INCR_DT_COND
        }));
      })
      .catch(error => {
        console.error('Error fetching additional details:', error);
      });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    setLoading(true);
    axios.post('http://127.0.0.1:8000/dispatch_MLProfile_data/', formData, {
      headers: {
        'Content-Type': 'application/json'
      }
    })
      .then(response => {
        setLoading(false);
        console.log('ML Profiler Triggered:', response.data);
      })
      .catch(error => {
        setLoading(false);
        console.error('Error triggering ML Profiler:', error);
      });
  };
  return (
    <Container fluid>
      <Row className="justify-content-center align-items-center my-xl-1">
        <Col xl={5}>
          <div className="px-5 py-2 rounded shadow-lg my-2">
            <h2 className="mb-2 text-center">ML Profile Form</h2>

            <Form onSubmit={handleSubmit}>
              <Form.Group className="mb-2" controlId="ControlInput1">
                <Form.Label>Data Source</Form.Label>
                <Form.Select value={formData.data_source} name='data_source' onChange={handleChange}>
                  <option value='' disabled>Select Environment</option>
                  <option value="GCP">GCP</option>
                  <option value="Tera Data">Tera Data</option>
                </Form.Select>    
              </Form.Group>

              <Form.Group className="mb-2" controlId="ControlInput2" style={{ display: formData.data_source === 'GCP' ? 'block' : 'none' }}>
                <Form.Label>Select Project</Form.Label>
                <Form.Control type="text" value={formData.project_name} name='project_name' onChange={handleChange} placeholder="Project" />
              </Form.Group>

              <Form.Group className="mb-2" controlId="ControlInput3">
                <Form.Label>Select Database</Form.Label>
                <Form.Control type="text" value={formData.dbname} name='dbname' onChange={handleChange} placeholder="Database" />
              </Form.Group>

              <Form.Group className="mb-2" controlId="ControlInput4">
                <Form.Label>Select Tables</Form.Label>
                <Form.Control type="text" value={formData.table_name} name='table_name' onChange={handleChange} placeholder="Table" />
              </Form.Group>

              <div className="d-flex justify-content-center mb-2">
                <Button variant="danger" type="button" onClick={handleConnectivityCheck} disabled={loading}>
                  {loading ? 'Checking...' : 'Check For Connectivity'}
                </Button>
              </div>

              <div id='additionalFields' style={{ display: additionalFieldsVisible ? 'block' : 'none' }}>
                <Form.Group className="mb-2" controlId="ControlInput5">
                  <Form.Label>Incremental Column</Form.Label>
                  <Form.Control type="text" value={formData.incr_col} name='incr_col' onChange={handleChange} placeholder="Incremental Column" />
                </Form.Group>

                <Form.Group className="mb-2" controlId="ControlInput6">
                  <Form.Label>Incremental Condition</Form.Label>
                  <Form.Control type="text" value={formData.incr_cond} name='incr_cond' onChange={handleChange} placeholder="Incremental Condition" />
                </Form.Group>

                <Form.Group className="mb-2" controlId="ControlInput7">
                  <Form.Label>Select Email</Form.Label>
                  <Form.Control type="email" value={formData.email} name='email' onChange={handleChange} placeholder="Email" />
                </Form.Group>

                <div className="d-flex justify-content-center mb-2">
                  <Button variant="danger" type="submit">
                    Submit
